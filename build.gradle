plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.14.0"
selenideVersion = '5.23.0'
JUnitVersion = '5.7.2'
allure {
    version = allureVersion
    aspectjweaver = true
    autoconfigure = true
    configuration = "testImplementation"
    useJUnit5 {
        version = JUnitVersion
    }
}

dependencies {
    testImplementation(
            "io.qameta.allure:allure-selenide:$allureVersion",
            group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.32',
            'io.qameta.allure:allure-spock:2.14.0',
            "com.github.javafaker:javafaker:1.0.2",
            "org.assertj:assertj-core:3.20.2",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$JUnitVersion",
            "org.junit.jupiter:junit-jupiter-params:5.7.2"
    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:5.7.1",
            "org.slf4j: slf4j-simple: 1.7.29"
    )

}

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test){
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standart_error", "standart_out"
            exceptionFormat "short"
        }
    }
}
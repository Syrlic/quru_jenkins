plugins {
    id 'java-library'
  //  id "io.qameta.allure" version "2.8.1"
}

repositories {
    mavenCentral()
}

//def allureVersion = '2.15.0'
//def selenideVersion = '5.25.0'
def junitVersion = "5.8.1"
//allure {
//    version = allureVersion
//    aspectjweaver = true
//    autoconfigure = true
//    configuration = "testImplementation"
//    useJUnit5 {
//        version = junitVersion
//    }
//}

dependencies {
    testImplementation(
      //      "io.qameta.allure:allure-selenide:$allureVersion",
      //      group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.32',
       //     "io.qameta.allure:allure-spock:$allureVersion",
     //       'io.qameta.allure:allure-junit5:2.15.0',
       //     "org.assertj:assertj-core:3.21.0",
       //     "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion",
            'org.slf4j:slf4j-simple:1.7.32'
    )

}

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test){
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events 'STARTED', 'PASSED', 'SKIPPED', 'FAILED', 'STANDARD_OUT', 'STANDARD_ERROR'
            //"started", "skipped", "failed", "standart_error", "standart_out"
            exceptionFormat "short"
        }
    }
}